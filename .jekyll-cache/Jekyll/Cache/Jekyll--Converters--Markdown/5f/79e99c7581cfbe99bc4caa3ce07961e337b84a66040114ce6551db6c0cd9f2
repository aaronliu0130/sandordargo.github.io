I"R<p>The aim of this keyword is to add nodes or relationships to your graph database. As you are going to see you can add one simple node without any useful data, but you can also add multiple well-characterized nodes with relationships connecting them together. Letâ€™s dive deep!</p>

<h2 id="create-one-node">Create one node</h2>
<p>The simplest query I could imagine is this one:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>CREATE ()
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This creates a new node without any labels or properties. It is a pure node with only its technical ID. Probably not too useful in real life, but still this is the origo. It helps us to see that in a Cypher query a node is defined between parentheses.</p>

<h3 id="create-a-node-with-one-or-more-labels">Create a node with one or more labels</h3>
<p>Now if you want to create a new node with a label, you write the label after a colon, just like this:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>CREATE (:CABERNET_SAUVIGNON)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>As I mentioned in the <a href="/blog/2017/10/04/cypher-introduction">introduction</a> you can attach multiple labels to a node:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>CREATE (:CABERNET_SAUVIGNON:RED)
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="create-a-node-with-a-label-and-properties">Create a node with a label and properties</h3>
<p>If you also want to attach some properties to a node you can do it within the parentheses, after the labels in a JSON-style:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>CREATE (:WINE {name:"Cabernet Sauvignon", fruity: false})
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Tagging a node with a label is not mandatory, but if you want to attach a label, you have to write it before the properties.</p>

<h3 id="create-two-nodes">Create two nodes</h3>
<p>Just separate your nodes by a comma. The CREATE keyword has to be used only once.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>CREATE (:WINE {name:"Cabernet Sauvignon", fruity: false}), (:WINE {name:"Merlot", fruity: true})
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="create-new-relationships">Create new relationships</h2>
<p>Youâ€™ve just seen how easy it is to create new nodes. Now weâ€™ll see how easy it is to create two nodes with a relationship between them.</p>

<h3 id="create-new-relationship-between-new-nodes">Create new relationship between new nodes</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>CREATE (:GRAPE {name:"Cabernet Sauvignon"})-[:GROWS_AT]-&gt;(:SUBREGION {name:"VillÃ¡ny"})
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Whereas nodes are declared between parentheses, relationships are signaled by brackets. A relationship just as a node can have as many properties as you want - again, declare them in JSON style. However while a node can have multiple labels, a relationship can have only one type. But you can add multiple relationships with different types between the same two nodes.</p>

<h3 id="create-new-relationships-between-existing-nodes">Create new relationships between existing nodes</h3>
<p>Adding a new relationship to nodes that already exist is, of course, possible, but it requires the usage of the <code class="language-plaintext highlighter-rouge">MATCH</code> keyword. As <code class="language-plaintext highlighter-rouge">MATCH</code> is not part of this article, I wonâ€™t go into details about it. I could relate Cypherâ€™s <code class="language-plaintext highlighter-rouge">MATCH</code> to SQLâ€™s <code class="language-plaintext highlighter-rouge">FROM</code> and <code class="language-plaintext highlighter-rouge">WHERE</code> keywords.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>MATCH (cabernet:Grape {name: 'Cabernet sauvignon'}), (villany:SUBREGION {name:"VillÃ¡ny"})
CREATE (cabernet)-[relationship_type:GROWS_AT]-&gt;(villany)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Here you can see something you havenâ€™t seen before. I stared nodes and relationships with a name. You can name them and reuse them, i.e. you can have variables. If I create a node and I name it to cabernet, I can reuse the node in the same line without giving the full description again:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>CREATE (cabernet:Grape {name: 'Cabernet sauvignon'}),
(villany:SUBREGION {name:"VillÃ¡ny"}),
(cabernet)-[relationship_type:GROWS_AT]-&gt;(villany)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>In fact, if you use the same declaration twice (without giving a variable name to the new entity), two nodes/relationships would be created with the same attributes, but with a different id.</p>

<h2 id="conclusion">Conclusion</h2>

<p>Today weâ€™ve seen how to use the CREATE keyword in order to create nodes and/or relationships. Soon we will discover other keywords, such as <code class="language-plaintext highlighter-rouge">MATCH</code> and <code class="language-plaintext highlighter-rouge">RETURN</code>.</p>

<h2 id="call-to-action">Call to action</h2>
<p>If you are interested in graph databases, go and get one. Start experimenting with for example Neo4j. Itâ€™s easy to <a href="https://neo4j.com/docs/operations-manual/current/installation/">install it</a>, but you can also play with it <a href="http://console.neo4j.org/">online</a>.</p>

<p>If you are interested whatâ€™s coming, follow me on Twitter.</p>
:ET