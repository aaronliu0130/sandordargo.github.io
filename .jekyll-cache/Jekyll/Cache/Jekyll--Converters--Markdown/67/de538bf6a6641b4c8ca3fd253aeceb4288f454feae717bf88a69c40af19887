I"Ñ	<p>Why I wanted to read the <a href="http://amzn.to/2xV90jo">book</a>? At work I use mostly 3 languages: C++, Java and Python, depending on my actual project/task. I tend to read a lot of technical books and articles, so I hear often about other languages, other paradigms which are quite unfimilar to me. I have been thinking more and more about learning something completely new (to me) such as functional programming.</p>

<p>Then I ran across <a href="http://amzn.to/2xV90jo">this book</a> and I knew it is for me. It is challenging enough and should pay off quite well.</p>

<p>So I started to read, started to play with the examples and completing the exercises.</p>

<p>The first language is Ruby, yes it is not FP yet, but Haskell will come too later.</p>

<p>I don‚Äôt want to write a wrap up about Ruby. Many others did that already and there are great tutorials on the web. I‚Äôd rather mention a just few stuff I really liked:</p>

<p><strong>Open classes</strong></p>

<p>A class in ruby can be ‚Äúopened up‚Äù and modified anytime. It means that if you want to attach some behaviour to any existing class, you can do it anytime.</p>

<p><strong>Numbers are objects</strong></p>

<p>Why is that so great? Because numbers can also have behaviour. So you can write <code class="language-plaintext highlighter-rouge">4.times {|i| puts i}</code> and it will count from 0 to 3. It is that simple!</p>

<p><strong>Method missing</strong></p>

<p>If you try to invoke a non-existing method of an object you will have to face with a <code class="language-plaintext highlighter-rouge">NoMethodError</code> exception. But you have a safety net, method_missing. It is given the symbol of the non-existent method, the array of the arguments and any block passed to it. Sounds like you can handle nasty events gracefully.</p>

<p>Not bad. But it is much more than that! It a very important tool of metaprogramming. It let‚Äôs simplyfy things, creating more readable code or even Domain Specific languages.</p>

<p>Just don‚Äôt get carried away, as always you should find a golden mean.</p>

<p>I just scrached the surface of Ruby, but I liked what I have seen so far. I will keep on practicing.</p>

<p>If you don‚Äôt know it yet, I advise you to learn it a bit and practice. It‚Äôs all about readable coding. If you get the taste while doing some Ruby, you might write more readable code in other languages too.</p>

<p>Good luck!</p>
:ET